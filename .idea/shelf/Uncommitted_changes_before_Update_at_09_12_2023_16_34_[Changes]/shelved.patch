Index: backend/src/main/java/com/example/jwt/domain/level/Level.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/example/jwt/domain/level/Level.java b/backend/src/main/java/com/example/jwt/domain/level/Level.java
new file mode 100644
--- /dev/null	(date 1702135165356)
+++ b/backend/src/main/java/com/example/jwt/domain/level/Level.java	(date 1702135165356)
@@ -0,0 +1,49 @@
+package com.example.jwt.domain.level;
+
+import com.example.jwt.core.generic.ExtendedEntity;
+import com.example.jwt.domain.authority.Authority;
+import com.example.jwt.domain.user.User;
+
+import java.util.HashSet;
+import java.util.Set;
+import java.util.UUID;
+import javax.persistence.*;
+
+@Entity
+@Table(name = "level")
+public class Level extends ExtendedEntity {
+
+    @Column(name = "name")
+    @Enumerated(EnumType.STRING)
+    private LevelEnum name;
+    @OneToOne(mappedBy = "level")
+    private User user;
+
+
+    public Level() {
+    }
+
+    public Level(UUID id, LevelEnum name, User user) {
+        super(id);
+        this.name = name;
+        this.user = user;
+    }
+
+    public LevelEnum getName() {
+        return name;
+    }
+
+    public Level setName(LevelEnum name) {
+        this.name = name;
+        return this;
+    }
+
+    public User getUser() {
+        return user;
+    }
+
+    public Level setUser(User user) {
+        this.user = user;
+        return this;
+    }
+}
\ No newline at end of file
Index: backend/build/generated/sources/annotationProcessor/java/main/com/example/jwt/domain/authority/dto/AuthorityMapperImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.jwt.domain.authority.dto;\r\n\r\nimport com.example.jwt.domain.authority.Authority;\r\nimport java.util.ArrayList;\r\nimport java.util.LinkedHashSet;\r\nimport java.util.List;\r\nimport java.util.Set;\r\nimport javax.annotation.processing.Generated;\r\nimport org.springframework.stereotype.Component;\r\n\r\n@Generated(\r\n    value = \"org.mapstruct.ap.MappingProcessor\",\r\n    date = \"2023-12-09T11:53:34+0100\",\r\n    comments = \"version: 1.5.5.Final, compiler: IncrementalProcessingEnvironment from gradle-language-java-7.5.jar, environment: Java 17.0.9 (Eclipse Adoptium)\"\r\n)\r\n@Component\r\npublic class AuthorityMapperImpl implements AuthorityMapper {\r\n\r\n    @Override\r\n    public Authority fromDTO(AuthorityDTO dto) {\r\n        if ( dto == null ) {\r\n            return null;\r\n        }\r\n\r\n        Authority authority = new Authority();\r\n\r\n        authority.setId( dto.getId() );\r\n        authority.setName( dto.getName() );\r\n\r\n        return authority;\r\n    }\r\n\r\n    @Override\r\n    public List<Authority> fromDTOs(List<AuthorityDTO> dtos) {\r\n        if ( dtos == null ) {\r\n            return null;\r\n        }\r\n\r\n        List<Authority> list = new ArrayList<Authority>( dtos.size() );\r\n        for ( AuthorityDTO authorityDTO : dtos ) {\r\n            list.add( fromDTO( authorityDTO ) );\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    @Override\r\n    public Set<Authority> fromDTOs(Set<AuthorityDTO> dtos) {\r\n        if ( dtos == null ) {\r\n            return null;\r\n        }\r\n\r\n        Set<Authority> set = new LinkedHashSet<Authority>( Math.max( (int) ( dtos.size() / .75f ) + 1, 16 ) );\r\n        for ( AuthorityDTO authorityDTO : dtos ) {\r\n            set.add( fromDTO( authorityDTO ) );\r\n        }\r\n\r\n        return set;\r\n    }\r\n\r\n    @Override\r\n    public AuthorityDTO toDTO(Authority BO) {\r\n        if ( BO == null ) {\r\n            return null;\r\n        }\r\n\r\n        AuthorityDTO authorityDTO = new AuthorityDTO();\r\n\r\n        authorityDTO.setId( BO.getId() );\r\n        authorityDTO.setName( BO.getName() );\r\n\r\n        return authorityDTO;\r\n    }\r\n\r\n    @Override\r\n    public List<AuthorityDTO> toDTOs(List<Authority> BOs) {\r\n        if ( BOs == null ) {\r\n            return null;\r\n        }\r\n\r\n        List<AuthorityDTO> list = new ArrayList<AuthorityDTO>( BOs.size() );\r\n        for ( Authority authority : BOs ) {\r\n            list.add( toDTO( authority ) );\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    @Override\r\n    public Set<AuthorityDTO> toDTOs(Set<Authority> BOs) {\r\n        if ( BOs == null ) {\r\n            return null;\r\n        }\r\n\r\n        Set<AuthorityDTO> set = new LinkedHashSet<AuthorityDTO>( Math.max( (int) ( BOs.size() / .75f ) + 1, 16 ) );\r\n        for ( Authority authority : BOs ) {\r\n            set.add( toDTO( authority ) );\r\n        }\r\n\r\n        return set;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/build/generated/sources/annotationProcessor/java/main/com/example/jwt/domain/authority/dto/AuthorityMapperImpl.java b/backend/build/generated/sources/annotationProcessor/java/main/com/example/jwt/domain/authority/dto/AuthorityMapperImpl.java
--- a/backend/build/generated/sources/annotationProcessor/java/main/com/example/jwt/domain/authority/dto/AuthorityMapperImpl.java	(revision 36801deb8f1fc4ae1959877849cb457494ea96b1)
+++ b/backend/build/generated/sources/annotationProcessor/java/main/com/example/jwt/domain/authority/dto/AuthorityMapperImpl.java	(date 1702133167561)
@@ -10,8 +10,8 @@
 
 @Generated(
     value = "org.mapstruct.ap.MappingProcessor",
-    date = "2023-12-09T11:53:34+0100",
-    comments = "version: 1.5.5.Final, compiler: IncrementalProcessingEnvironment from gradle-language-java-7.5.jar, environment: Java 17.0.9 (Eclipse Adoptium)"
+    date = "2023-12-09T15:46:07+0100",
+    comments = "version: 1.5.5.Final, compiler: IncrementalProcessingEnvironment from gradle-language-java-7.5.jar, environment: Java 17.0.7 (Oracle Corporation)"
 )
 @Component
 public class AuthorityMapperImpl implements AuthorityMapper {
Index: backend/src/main/java/com/example/jwt/domain/level/LevelEnum.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/example/jwt/domain/level/LevelEnum.java b/backend/src/main/java/com/example/jwt/domain/level/LevelEnum.java
new file mode 100644
--- /dev/null	(date 1702133144535)
+++ b/backend/src/main/java/com/example/jwt/domain/level/LevelEnum.java	(date 1702133144535)
@@ -0,0 +1,5 @@
+package com.example.jwt.domain.level;
+
+public enum LevelEnum {
+    BRONZE, SILVER, GOLD, PLATINUM, DIAMOND
+}
\ No newline at end of file
Index: backend/build/generated/sources/annotationProcessor/java/main/com/example/jwt/domain/role/dto/RoleMapperImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.jwt.domain.role.dto;\r\n\r\nimport com.example.jwt.domain.authority.Authority;\r\nimport com.example.jwt.domain.authority.dto.AuthorityDTO;\r\nimport com.example.jwt.domain.role.Role;\r\nimport java.util.ArrayList;\r\nimport java.util.LinkedHashSet;\r\nimport java.util.List;\r\nimport java.util.Set;\r\nimport javax.annotation.processing.Generated;\r\nimport org.springframework.stereotype.Component;\r\n\r\n@Generated(\r\n    value = \"org.mapstruct.ap.MappingProcessor\",\r\n    date = \"2023-12-09T11:53:35+0100\",\r\n    comments = \"version: 1.5.5.Final, compiler: IncrementalProcessingEnvironment from gradle-language-java-7.5.jar, environment: Java 17.0.9 (Eclipse Adoptium)\"\r\n)\r\n@Component\r\npublic class RoleMapperImpl implements RoleMapper {\r\n\r\n    @Override\r\n    public Role fromDTO(RoleDTO dto) {\r\n        if ( dto == null ) {\r\n            return null;\r\n        }\r\n\r\n        Role role = new Role();\r\n\r\n        role.setId( dto.getId() );\r\n        role.setName( dto.getName() );\r\n        role.setAuthorities( authorityDTOSetToAuthoritySet( dto.getAuthorities() ) );\r\n\r\n        return role;\r\n    }\r\n\r\n    @Override\r\n    public List<Role> fromDTOs(List<RoleDTO> dtos) {\r\n        if ( dtos == null ) {\r\n            return null;\r\n        }\r\n\r\n        List<Role> list = new ArrayList<Role>( dtos.size() );\r\n        for ( RoleDTO roleDTO : dtos ) {\r\n            list.add( fromDTO( roleDTO ) );\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    @Override\r\n    public Set<Role> fromDTOs(Set<RoleDTO> dtos) {\r\n        if ( dtos == null ) {\r\n            return null;\r\n        }\r\n\r\n        Set<Role> set = new LinkedHashSet<Role>( Math.max( (int) ( dtos.size() / .75f ) + 1, 16 ) );\r\n        for ( RoleDTO roleDTO : dtos ) {\r\n            set.add( fromDTO( roleDTO ) );\r\n        }\r\n\r\n        return set;\r\n    }\r\n\r\n    @Override\r\n    public RoleDTO toDTO(Role BO) {\r\n        if ( BO == null ) {\r\n            return null;\r\n        }\r\n\r\n        RoleDTO roleDTO = new RoleDTO();\r\n\r\n        roleDTO.setId( BO.getId() );\r\n        roleDTO.setName( BO.getName() );\r\n        roleDTO.setAuthorities( authoritySetToAuthorityDTOSet( BO.getAuthorities() ) );\r\n\r\n        return roleDTO;\r\n    }\r\n\r\n    @Override\r\n    public List<RoleDTO> toDTOs(List<Role> BOs) {\r\n        if ( BOs == null ) {\r\n            return null;\r\n        }\r\n\r\n        List<RoleDTO> list = new ArrayList<RoleDTO>( BOs.size() );\r\n        for ( Role role : BOs ) {\r\n            list.add( toDTO( role ) );\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    @Override\r\n    public Set<RoleDTO> toDTOs(Set<Role> BOs) {\r\n        if ( BOs == null ) {\r\n            return null;\r\n        }\r\n\r\n        Set<RoleDTO> set = new LinkedHashSet<RoleDTO>( Math.max( (int) ( BOs.size() / .75f ) + 1, 16 ) );\r\n        for ( Role role : BOs ) {\r\n            set.add( toDTO( role ) );\r\n        }\r\n\r\n        return set;\r\n    }\r\n\r\n    protected Authority authorityDTOToAuthority(AuthorityDTO authorityDTO) {\r\n        if ( authorityDTO == null ) {\r\n            return null;\r\n        }\r\n\r\n        Authority authority = new Authority();\r\n\r\n        authority.setId( authorityDTO.getId() );\r\n        authority.setName( authorityDTO.getName() );\r\n\r\n        return authority;\r\n    }\r\n\r\n    protected Set<Authority> authorityDTOSetToAuthoritySet(Set<AuthorityDTO> set) {\r\n        if ( set == null ) {\r\n            return null;\r\n        }\r\n\r\n        Set<Authority> set1 = new LinkedHashSet<Authority>( Math.max( (int) ( set.size() / .75f ) + 1, 16 ) );\r\n        for ( AuthorityDTO authorityDTO : set ) {\r\n            set1.add( authorityDTOToAuthority( authorityDTO ) );\r\n        }\r\n\r\n        return set1;\r\n    }\r\n\r\n    protected AuthorityDTO authorityToAuthorityDTO(Authority authority) {\r\n        if ( authority == null ) {\r\n            return null;\r\n        }\r\n\r\n        AuthorityDTO authorityDTO = new AuthorityDTO();\r\n\r\n        authorityDTO.setId( authority.getId() );\r\n        authorityDTO.setName( authority.getName() );\r\n\r\n        return authorityDTO;\r\n    }\r\n\r\n    protected Set<AuthorityDTO> authoritySetToAuthorityDTOSet(Set<Authority> set) {\r\n        if ( set == null ) {\r\n            return null;\r\n        }\r\n\r\n        Set<AuthorityDTO> set1 = new LinkedHashSet<AuthorityDTO>( Math.max( (int) ( set.size() / .75f ) + 1, 16 ) );\r\n        for ( Authority authority : set ) {\r\n            set1.add( authorityToAuthorityDTO( authority ) );\r\n        }\r\n\r\n        return set1;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/build/generated/sources/annotationProcessor/java/main/com/example/jwt/domain/role/dto/RoleMapperImpl.java b/backend/build/generated/sources/annotationProcessor/java/main/com/example/jwt/domain/role/dto/RoleMapperImpl.java
--- a/backend/build/generated/sources/annotationProcessor/java/main/com/example/jwt/domain/role/dto/RoleMapperImpl.java	(revision 36801deb8f1fc4ae1959877849cb457494ea96b1)
+++ b/backend/build/generated/sources/annotationProcessor/java/main/com/example/jwt/domain/role/dto/RoleMapperImpl.java	(date 1702133167432)
@@ -12,8 +12,8 @@
 
 @Generated(
     value = "org.mapstruct.ap.MappingProcessor",
-    date = "2023-12-09T11:53:35+0100",
-    comments = "version: 1.5.5.Final, compiler: IncrementalProcessingEnvironment from gradle-language-java-7.5.jar, environment: Java 17.0.9 (Eclipse Adoptium)"
+    date = "2023-12-09T15:46:07+0100",
+    comments = "version: 1.5.5.Final, compiler: IncrementalProcessingEnvironment from gradle-language-java-7.5.jar, environment: Java 17.0.7 (Oracle Corporation)"
 )
 @Component
 public class RoleMapperImpl implements RoleMapper {
Index: backend/src/main/java/com/example/jwt/domain/user/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.jwt.domain.user;\r\n\r\nimport com.example.jwt.core.generic.ExtendedAuditEntity;\r\nimport com.example.jwt.domain.role.Role;\r\nimport java.util.HashSet;\r\nimport java.util.Set;\r\nimport java.util.UUID;\r\nimport javax.persistence.Column;\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.FetchType;\r\nimport javax.persistence.JoinColumn;\r\nimport javax.persistence.JoinTable;\r\nimport javax.persistence.ManyToMany;\r\nimport javax.persistence.Table;\r\n\r\n@Entity\r\n@Table(name = \"users\")\r\npublic class User extends ExtendedAuditEntity {\r\n\r\n  @Column(name = \"first_name\")\r\n  private String firstName;\r\n\r\n  @Column(name = \"last_name\")\r\n  private String lastName;\r\n\r\n  @Column(name = \"email\", unique = true, nullable = false)\r\n  private String email;\r\n\r\n  @Column(name = \"password\")\r\n  private String password;\r\n\r\n  @ManyToMany(fetch = FetchType.EAGER)\r\n  @JoinTable(\r\n      name = \"users_role\",\r\n      joinColumns = @JoinColumn(name = \"users_id\", referencedColumnName = \"id\"),\r\n      inverseJoinColumns = @JoinColumn(name = \"role_id\", referencedColumnName = \"id\")\r\n  )\r\n  private Set<Role> roles = new HashSet<>();\r\n\r\n  public User() {\r\n  }\r\n\r\n  public User(UUID id, String firstName, String lastName, String email, String password,\r\n      Set<Role> roles) {\r\n    super(id);\r\n    this.firstName = firstName;\r\n    this.lastName = lastName;\r\n    this.email = email;\r\n    this.password = password;\r\n    this.roles = roles;\r\n  }\r\n\r\n  public String getFirstName() {\r\n    return firstName;\r\n  }\r\n\r\n  public User setFirstName(String firstName) {\r\n    this.firstName = firstName;\r\n    return this;\r\n  }\r\n\r\n  public String getLastName() {\r\n    return lastName;\r\n  }\r\n\r\n  public User setLastName(String lastName) {\r\n    this.lastName = lastName;\r\n    return this;\r\n  }\r\n\r\n  public String getEmail() {\r\n    return email;\r\n  }\r\n\r\n  public User setEmail(String email) {\r\n    this.email = email;\r\n    return this;\r\n  }\r\n\r\n  public String getPassword() {\r\n    return password;\r\n  }\r\n\r\n  public User setPassword(String password) {\r\n    this.password = password;\r\n    return this;\r\n  }\r\n\r\n  public Set<Role> getRoles() {\r\n    return roles;\r\n  }\r\n\r\n  public User setRoles(Set<Role> roles) {\r\n    this.roles = roles;\r\n    return this;\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/example/jwt/domain/user/User.java b/backend/src/main/java/com/example/jwt/domain/user/User.java
--- a/backend/src/main/java/com/example/jwt/domain/user/User.java	(revision 36801deb8f1fc4ae1959877849cb457494ea96b1)
+++ b/backend/src/main/java/com/example/jwt/domain/user/User.java	(date 1702134975860)
@@ -1,17 +1,12 @@
 package com.example.jwt.domain.user;
 
 import com.example.jwt.core.generic.ExtendedAuditEntity;
+import com.example.jwt.domain.level.Level;
 import com.example.jwt.domain.role.Role;
 import java.util.HashSet;
 import java.util.Set;
 import java.util.UUID;
-import javax.persistence.Column;
-import javax.persistence.Entity;
-import javax.persistence.FetchType;
-import javax.persistence.JoinColumn;
-import javax.persistence.JoinTable;
-import javax.persistence.ManyToMany;
-import javax.persistence.Table;
+import javax.persistence.*;
 
 @Entity
 @Table(name = "users")
@@ -28,12 +23,15 @@
 
   @Column(name = "password")
   private String password;
+  @OneToOne(cascade = CascadeType.ALL)
+  @JoinColumn(name = "users_level", referencedColumnName = "id")
+  private Level level;
 
   @ManyToMany(fetch = FetchType.EAGER)
   @JoinTable(
-      name = "users_role",
-      joinColumns = @JoinColumn(name = "users_id", referencedColumnName = "id"),
-      inverseJoinColumns = @JoinColumn(name = "role_id", referencedColumnName = "id")
+          name = "users_role",
+          joinColumns = @JoinColumn(name = "users_id", referencedColumnName = "id"),
+          inverseJoinColumns = @JoinColumn(name = "role_id", referencedColumnName = "id")
   )
   private Set<Role> roles = new HashSet<>();
 
@@ -41,7 +39,7 @@
   }
 
   public User(UUID id, String firstName, String lastName, String email, String password,
-      Set<Role> roles) {
+              Set<Role> roles) {
     super(id);
     this.firstName = firstName;
     this.lastName = lastName;
@@ -94,4 +92,13 @@
     this.roles = roles;
     return this;
   }
-}
+
+  public Level getLevel() {
+    return level;
+  }
+
+  public User setLevel(Level level) {
+    this.level = level;
+    return this;
+  }
+}
\ No newline at end of file
Index: backend/build/generated/sources/annotationProcessor/java/main/com/example/jwt/domain/user/dto/UserMapperImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.jwt.domain.user.dto;\r\n\r\nimport com.example.jwt.domain.authority.Authority;\r\nimport com.example.jwt.domain.authority.dto.AuthorityDTO;\r\nimport com.example.jwt.domain.role.Role;\r\nimport com.example.jwt.domain.role.dto.RoleDTO;\r\nimport com.example.jwt.domain.user.User;\r\nimport java.util.ArrayList;\r\nimport java.util.LinkedHashSet;\r\nimport java.util.List;\r\nimport java.util.Set;\r\nimport javax.annotation.processing.Generated;\r\nimport org.springframework.stereotype.Component;\r\n\r\n@Generated(\r\n    value = \"org.mapstruct.ap.MappingProcessor\",\r\n    date = \"2023-12-09T11:53:35+0100\",\r\n    comments = \"version: 1.5.5.Final, compiler: IncrementalProcessingEnvironment from gradle-language-java-7.5.jar, environment: Java 17.0.9 (Eclipse Adoptium)\"\r\n)\r\n@Component\r\npublic class UserMapperImpl implements UserMapper {\r\n\r\n    @Override\r\n    public User fromDTO(UserDTO dto) {\r\n        if ( dto == null ) {\r\n            return null;\r\n        }\r\n\r\n        User user = new User();\r\n\r\n        user.setId( dto.getId() );\r\n        user.setFirstName( dto.getFirstName() );\r\n        user.setLastName( dto.getLastName() );\r\n        user.setEmail( dto.getEmail() );\r\n        user.setRoles( roleDTOSetToRoleSet( dto.getRoles() ) );\r\n\r\n        return user;\r\n    }\r\n\r\n    @Override\r\n    public List<User> fromDTOs(List<UserDTO> dtos) {\r\n        if ( dtos == null ) {\r\n            return null;\r\n        }\r\n\r\n        List<User> list = new ArrayList<User>( dtos.size() );\r\n        for ( UserDTO userDTO : dtos ) {\r\n            list.add( fromDTO( userDTO ) );\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    @Override\r\n    public Set<User> fromDTOs(Set<UserDTO> dtos) {\r\n        if ( dtos == null ) {\r\n            return null;\r\n        }\r\n\r\n        Set<User> set = new LinkedHashSet<User>( Math.max( (int) ( dtos.size() / .75f ) + 1, 16 ) );\r\n        for ( UserDTO userDTO : dtos ) {\r\n            set.add( fromDTO( userDTO ) );\r\n        }\r\n\r\n        return set;\r\n    }\r\n\r\n    @Override\r\n    public UserDTO toDTO(User BO) {\r\n        if ( BO == null ) {\r\n            return null;\r\n        }\r\n\r\n        UserDTO userDTO = new UserDTO();\r\n\r\n        userDTO.setId( BO.getId() );\r\n        userDTO.setFirstName( BO.getFirstName() );\r\n        userDTO.setLastName( BO.getLastName() );\r\n        userDTO.setEmail( BO.getEmail() );\r\n        userDTO.setRoles( roleSetToRoleDTOSet( BO.getRoles() ) );\r\n\r\n        return userDTO;\r\n    }\r\n\r\n    @Override\r\n    public List<UserDTO> toDTOs(List<User> BOs) {\r\n        if ( BOs == null ) {\r\n            return null;\r\n        }\r\n\r\n        List<UserDTO> list = new ArrayList<UserDTO>( BOs.size() );\r\n        for ( User user : BOs ) {\r\n            list.add( toDTO( user ) );\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    @Override\r\n    public Set<UserDTO> toDTOs(Set<User> BOs) {\r\n        if ( BOs == null ) {\r\n            return null;\r\n        }\r\n\r\n        Set<UserDTO> set = new LinkedHashSet<UserDTO>( Math.max( (int) ( BOs.size() / .75f ) + 1, 16 ) );\r\n        for ( User user : BOs ) {\r\n            set.add( toDTO( user ) );\r\n        }\r\n\r\n        return set;\r\n    }\r\n\r\n    @Override\r\n    public User fromUserRegisterDTO(UserRegisterDTO dto) {\r\n        if ( dto == null ) {\r\n            return null;\r\n        }\r\n\r\n        User user = new User();\r\n\r\n        user.setId( dto.getId() );\r\n        user.setFirstName( dto.getFirstName() );\r\n        user.setLastName( dto.getLastName() );\r\n        user.setEmail( dto.getEmail() );\r\n        user.setPassword( dto.getPassword() );\r\n\r\n        return user;\r\n    }\r\n\r\n    protected Authority authorityDTOToAuthority(AuthorityDTO authorityDTO) {\r\n        if ( authorityDTO == null ) {\r\n            return null;\r\n        }\r\n\r\n        Authority authority = new Authority();\r\n\r\n        authority.setId( authorityDTO.getId() );\r\n        authority.setName( authorityDTO.getName() );\r\n\r\n        return authority;\r\n    }\r\n\r\n    protected Set<Authority> authorityDTOSetToAuthoritySet(Set<AuthorityDTO> set) {\r\n        if ( set == null ) {\r\n            return null;\r\n        }\r\n\r\n        Set<Authority> set1 = new LinkedHashSet<Authority>( Math.max( (int) ( set.size() / .75f ) + 1, 16 ) );\r\n        for ( AuthorityDTO authorityDTO : set ) {\r\n            set1.add( authorityDTOToAuthority( authorityDTO ) );\r\n        }\r\n\r\n        return set1;\r\n    }\r\n\r\n    protected Role roleDTOToRole(RoleDTO roleDTO) {\r\n        if ( roleDTO == null ) {\r\n            return null;\r\n        }\r\n\r\n        Role role = new Role();\r\n\r\n        role.setId( roleDTO.getId() );\r\n        role.setName( roleDTO.getName() );\r\n        role.setAuthorities( authorityDTOSetToAuthoritySet( roleDTO.getAuthorities() ) );\r\n\r\n        return role;\r\n    }\r\n\r\n    protected Set<Role> roleDTOSetToRoleSet(Set<RoleDTO> set) {\r\n        if ( set == null ) {\r\n            return null;\r\n        }\r\n\r\n        Set<Role> set1 = new LinkedHashSet<Role>( Math.max( (int) ( set.size() / .75f ) + 1, 16 ) );\r\n        for ( RoleDTO roleDTO : set ) {\r\n            set1.add( roleDTOToRole( roleDTO ) );\r\n        }\r\n\r\n        return set1;\r\n    }\r\n\r\n    protected AuthorityDTO authorityToAuthorityDTO(Authority authority) {\r\n        if ( authority == null ) {\r\n            return null;\r\n        }\r\n\r\n        AuthorityDTO authorityDTO = new AuthorityDTO();\r\n\r\n        authorityDTO.setId( authority.getId() );\r\n        authorityDTO.setName( authority.getName() );\r\n\r\n        return authorityDTO;\r\n    }\r\n\r\n    protected Set<AuthorityDTO> authoritySetToAuthorityDTOSet(Set<Authority> set) {\r\n        if ( set == null ) {\r\n            return null;\r\n        }\r\n\r\n        Set<AuthorityDTO> set1 = new LinkedHashSet<AuthorityDTO>( Math.max( (int) ( set.size() / .75f ) + 1, 16 ) );\r\n        for ( Authority authority : set ) {\r\n            set1.add( authorityToAuthorityDTO( authority ) );\r\n        }\r\n\r\n        return set1;\r\n    }\r\n\r\n    protected RoleDTO roleToRoleDTO(Role role) {\r\n        if ( role == null ) {\r\n            return null;\r\n        }\r\n\r\n        RoleDTO roleDTO = new RoleDTO();\r\n\r\n        roleDTO.setId( role.getId() );\r\n        roleDTO.setName( role.getName() );\r\n        roleDTO.setAuthorities( authoritySetToAuthorityDTOSet( role.getAuthorities() ) );\r\n\r\n        return roleDTO;\r\n    }\r\n\r\n    protected Set<RoleDTO> roleSetToRoleDTOSet(Set<Role> set) {\r\n        if ( set == null ) {\r\n            return null;\r\n        }\r\n\r\n        Set<RoleDTO> set1 = new LinkedHashSet<RoleDTO>( Math.max( (int) ( set.size() / .75f ) + 1, 16 ) );\r\n        for ( Role role : set ) {\r\n            set1.add( roleToRoleDTO( role ) );\r\n        }\r\n\r\n        return set1;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/build/generated/sources/annotationProcessor/java/main/com/example/jwt/domain/user/dto/UserMapperImpl.java b/backend/build/generated/sources/annotationProcessor/java/main/com/example/jwt/domain/user/dto/UserMapperImpl.java
--- a/backend/build/generated/sources/annotationProcessor/java/main/com/example/jwt/domain/user/dto/UserMapperImpl.java	(revision 36801deb8f1fc4ae1959877849cb457494ea96b1)
+++ b/backend/build/generated/sources/annotationProcessor/java/main/com/example/jwt/domain/user/dto/UserMapperImpl.java	(date 1702135167933)
@@ -14,8 +14,8 @@
 
 @Generated(
     value = "org.mapstruct.ap.MappingProcessor",
-    date = "2023-12-09T11:53:35+0100",
-    comments = "version: 1.5.5.Final, compiler: IncrementalProcessingEnvironment from gradle-language-java-7.5.jar, environment: Java 17.0.9 (Eclipse Adoptium)"
+    date = "2023-12-09T16:19:27+0100",
+    comments = "version: 1.5.5.Final, compiler: IncrementalProcessingEnvironment from gradle-language-java-7.5.jar, environment: Java 17.0.7 (Oracle Corporation)"
 )
 @Component
 public class UserMapperImpl implements UserMapper {
Index: backend/build/classes/java/main/META-INF/spring-configuration-metadata.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"groups\": [\r\n    {\r\n      \"name\": \"jwt\",\r\n      \"type\": \"com.example.jwt.core.security.helpers.JwtProperties\",\r\n      \"sourceType\": \"com.example.jwt.core.security.helpers.JwtProperties\"\r\n    }\r\n  ],\r\n  \"properties\": [\r\n    {\r\n      \"name\": \"jwt.expiration-millis\",\r\n      \"type\": \"java.lang.Long\",\r\n      \"sourceType\": \"com.example.jwt.core.security.helpers.JwtProperties\",\r\n      \"defaultValue\": 0\r\n    },\r\n    {\r\n      \"name\": \"jwt.issuer\",\r\n      \"type\": \"java.lang.String\",\r\n      \"sourceType\": \"com.example.jwt.core.security.helpers.JwtProperties\"\r\n    },\r\n    {\r\n      \"name\": \"jwt.secret\",\r\n      \"type\": \"java.lang.String\",\r\n      \"sourceType\": \"com.example.jwt.core.security.helpers.JwtProperties\"\r\n    }\r\n  ],\r\n  \"hints\": []\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/build/classes/java/main/META-INF/spring-configuration-metadata.json b/backend/build/classes/java/main/META-INF/spring-configuration-metadata.json
--- a/backend/build/classes/java/main/META-INF/spring-configuration-metadata.json	(revision 36801deb8f1fc4ae1959877849cb457494ea96b1)
+++ b/backend/build/classes/java/main/META-INF/spring-configuration-metadata.json	(date 1702135168054)
@@ -10,8 +10,7 @@
     {
       "name": "jwt.expiration-millis",
       "type": "java.lang.Long",
-      "sourceType": "com.example.jwt.core.security.helpers.JwtProperties",
-      "defaultValue": 0
+      "sourceType": "com.example.jwt.core.security.helpers.JwtProperties"
     },
     {
       "name": "jwt.issuer",
